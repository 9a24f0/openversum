/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          first_name?: parameters["rowFilter.profiles.first_name"];
          last_name?: parameters["rowFilter.profiles.last_name"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/contact": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contact.id"];
          created_at?: parameters["rowFilter.contact.created_at"];
          name?: parameters["rowFilter.contact.name"];
          email?: parameters["rowFilter.contact.email"];
          message?: parameters["rowFilter.contact.message"];
          type?: parameters["rowFilter.contact.type"];
          cv?: parameters["rowFilter.contact.cv"];
          organization?: parameters["rowFilter.contact.organization"];
          phone_number?: parameters["rowFilter.contact.phone_number"];
          country?: parameters["rowFilter.contact.country"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["contact"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** contact */
          contact?: definitions["contact"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contact.id"];
          created_at?: parameters["rowFilter.contact.created_at"];
          name?: parameters["rowFilter.contact.name"];
          email?: parameters["rowFilter.contact.email"];
          message?: parameters["rowFilter.contact.message"];
          type?: parameters["rowFilter.contact.type"];
          cv?: parameters["rowFilter.contact.cv"];
          organization?: parameters["rowFilter.contact.organization"];
          phone_number?: parameters["rowFilter.contact.phone_number"];
          country?: parameters["rowFilter.contact.country"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.contact.id"];
          created_at?: parameters["rowFilter.contact.created_at"];
          name?: parameters["rowFilter.contact.name"];
          email?: parameters["rowFilter.contact.email"];
          message?: parameters["rowFilter.contact.message"];
          type?: parameters["rowFilter.contact.type"];
          cv?: parameters["rowFilter.contact.cv"];
          organization?: parameters["rowFilter.contact.organization"];
          phone_number?: parameters["rowFilter.contact.phone_number"];
          country?: parameters["rowFilter.contact.country"];
        };
        body: {
          /** contact */
          contact?: definitions["contact"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/customer": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customer.id"];
          name?: parameters["rowFilter.customer.name"];
          adress?: parameters["rowFilter.customer.adress"];
          city?: parameters["rowFilter.customer.city"];
          created_at?: parameters["rowFilter.customer.created_at"];
          organization?: parameters["rowFilter.customer.organization"];
          latitude?: parameters["rowFilter.customer.latitude"];
          longitude?: parameters["rowFilter.customer.longitude"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["customer"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** customer */
          customer?: definitions["customer"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customer.id"];
          name?: parameters["rowFilter.customer.name"];
          adress?: parameters["rowFilter.customer.adress"];
          city?: parameters["rowFilter.customer.city"];
          created_at?: parameters["rowFilter.customer.created_at"];
          organization?: parameters["rowFilter.customer.organization"];
          latitude?: parameters["rowFilter.customer.latitude"];
          longitude?: parameters["rowFilter.customer.longitude"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.customer.id"];
          name?: parameters["rowFilter.customer.name"];
          adress?: parameters["rowFilter.customer.adress"];
          city?: parameters["rowFilter.customer.city"];
          created_at?: parameters["rowFilter.customer.created_at"];
          organization?: parameters["rowFilter.customer.organization"];
          latitude?: parameters["rowFilter.customer.latitude"];
          longitude?: parameters["rowFilter.customer.longitude"];
        };
        body: {
          /** customer */
          customer?: definitions["customer"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/filter_sales": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.filter_sales.id"];
          sold_by?: parameters["rowFilter.filter_sales.sold_by"];
          sold_to?: parameters["rowFilter.filter_sales.sold_to"];
          created_at?: parameters["rowFilter.filter_sales.created_at"];
          amount?: parameters["rowFilter.filter_sales.amount"];
          comment?: parameters["rowFilter.filter_sales.comment"];
          observations?: parameters["rowFilter.filter_sales.observations"];
          total_price?: parameters["rowFilter.filter_sales.total_price"];
          latitude?: parameters["rowFilter.filter_sales.latitude"];
          longitude?: parameters["rowFilter.filter_sales.longitude"];
          /** Either a filter or cartidge or materials */
          sold_item?: parameters["rowFilter.filter_sales.sold_item"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["filter_sales"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** filter_sales */
          filter_sales?: definitions["filter_sales"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.filter_sales.id"];
          sold_by?: parameters["rowFilter.filter_sales.sold_by"];
          sold_to?: parameters["rowFilter.filter_sales.sold_to"];
          created_at?: parameters["rowFilter.filter_sales.created_at"];
          amount?: parameters["rowFilter.filter_sales.amount"];
          comment?: parameters["rowFilter.filter_sales.comment"];
          observations?: parameters["rowFilter.filter_sales.observations"];
          total_price?: parameters["rowFilter.filter_sales.total_price"];
          latitude?: parameters["rowFilter.filter_sales.latitude"];
          longitude?: parameters["rowFilter.filter_sales.longitude"];
          /** Either a filter or cartidge or materials */
          sold_item?: parameters["rowFilter.filter_sales.sold_item"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.filter_sales.id"];
          sold_by?: parameters["rowFilter.filter_sales.sold_by"];
          sold_to?: parameters["rowFilter.filter_sales.sold_to"];
          created_at?: parameters["rowFilter.filter_sales.created_at"];
          amount?: parameters["rowFilter.filter_sales.amount"];
          comment?: parameters["rowFilter.filter_sales.comment"];
          observations?: parameters["rowFilter.filter_sales.observations"];
          total_price?: parameters["rowFilter.filter_sales.total_price"];
          latitude?: parameters["rowFilter.filter_sales.latitude"];
          longitude?: parameters["rowFilter.filter_sales.longitude"];
          /** Either a filter or cartidge or materials */
          sold_item?: parameters["rowFilter.filter_sales.sold_item"];
        };
        body: {
          /** filter_sales */
          filter_sales?: definitions["filter_sales"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: text */
    first_name?: string;
    /** Format: text */
    last_name?: string;
  };
  contact: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    name: string;
    /** Format: text */
    email: string;
    /** Format: text */
    message: string;
    /**
     * Format: text
     * @default general
     */
    type?: string;
    /** Format: text */
    cv?: string;
    /** Format: text */
    organization?: string;
    /** Format: text */
    phone_number?: string;
    /** Format: text */
    country?: string;
  };
  customer: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name: string;
    /** Format: text */
    adress: string;
    /** Format: text */
    city: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    organization?: string;
    /** Format: real */
    latitude?: number;
    /** Format: real */
    longitude?: number;
  };
  filter_sales: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: uuid */
    sold_by?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `customer.id`.<fk table='customer' column='id'/>
     */
    sold_to?: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: integer */
    amount: number;
    /** Format: text */
    comment?: string;
    /** Format: json */
    observations?: unknown;
    /** Format: numeric */
    total_price: number;
    /** Format: real */
    latitude?: number;
    /** Format: real */
    longitude?: number;
    /**
     * Format: text
     * @description Either a filter or cartidge or materials
     */
    sold_item: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description profiles */
  "body.profiles": definitions["profiles"];
  /** Format: uuid */
  "rowFilter.profiles.id": string;
  /** Format: text */
  "rowFilter.profiles.first_name": string;
  /** Format: text */
  "rowFilter.profiles.last_name": string;
  /** @description contact */
  "body.contact": definitions["contact"];
  /** Format: bigint */
  "rowFilter.contact.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.contact.created_at": string;
  /** Format: text */
  "rowFilter.contact.name": string;
  /** Format: text */
  "rowFilter.contact.email": string;
  /** Format: text */
  "rowFilter.contact.message": string;
  /** Format: text */
  "rowFilter.contact.type": string;
  /** Format: text */
  "rowFilter.contact.cv": string;
  /** Format: text */
  "rowFilter.contact.organization": string;
  /** Format: text */
  "rowFilter.contact.phone_number": string;
  /** Format: text */
  "rowFilter.contact.country": string;
  /** @description customer */
  "body.customer": definitions["customer"];
  /** Format: bigint */
  "rowFilter.customer.id": string;
  /** Format: text */
  "rowFilter.customer.name": string;
  /** Format: text */
  "rowFilter.customer.adress": string;
  /** Format: text */
  "rowFilter.customer.city": string;
  /** Format: timestamp with time zone */
  "rowFilter.customer.created_at": string;
  /** Format: text */
  "rowFilter.customer.organization": string;
  /** Format: real */
  "rowFilter.customer.latitude": string;
  /** Format: real */
  "rowFilter.customer.longitude": string;
  /** @description filter_sales */
  "body.filter_sales": definitions["filter_sales"];
  /** Format: bigint */
  "rowFilter.filter_sales.id": string;
  /** Format: uuid */
  "rowFilter.filter_sales.sold_by": string;
  /** Format: bigint */
  "rowFilter.filter_sales.sold_to": string;
  /** Format: timestamp with time zone */
  "rowFilter.filter_sales.created_at": string;
  /** Format: integer */
  "rowFilter.filter_sales.amount": string;
  /** Format: text */
  "rowFilter.filter_sales.comment": string;
  /** Format: json */
  "rowFilter.filter_sales.observations": string;
  /** Format: numeric */
  "rowFilter.filter_sales.total_price": string;
  /** Format: real */
  "rowFilter.filter_sales.latitude": string;
  /** Format: real */
  "rowFilter.filter_sales.longitude": string;
  /**
   * Format: text
   * @description Either a filter or cartidge or materials
   */
  "rowFilter.filter_sales.sold_item": string;
}

export interface operations {}

export interface external {}
